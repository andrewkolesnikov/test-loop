#!/usr/bin/env ruby
require 'rake' # for String#pathmap

# absorb test execution overhead into master process
overhead_file_glob = '{test,spec}/*{test,spec}_helper.rb'
$LOAD_PATH.unshift 'lib' # for non-Rails applications

puts 'test-loop: Absorbing overhead...'
Dir[overhead_file_glob].each do |file|
  $LOAD_PATH.insert 1, file.pathmap('%d')
  require file.pathmap('%n')
end

# continuously watch for and test changed code
started_at = last_ran_at = Time.now
never_ran_at = Time.at(0)

trap :QUIT do
  puts 'test-loop: Re-executing loop...'
  started_at = never_ran_at
end

trap :TSTP do
  puts 'test-loop: Testing everything...'
  last_ran_at = never_ran_at
end

puts 'test-loop: Ready for testing!'
loop do
  # figure out what test files need to be run
  test_files = {
    '{test,spec}/**/*_{test,spec}.rb' => '%p',
    '{lib,app}/**/*.rb' => '{test,spec}/**/%n_{test,spec}%x',
  }.
  map do |source_file_glob, test_file_pathmap|
    Dir[source_file_glob].
    select {|file| File.mtime(file) > last_ran_at }.
    map {|path| Dir[path.pathmap(test_file_pathmap)] }
  end.flatten.uniq

  # fork worker process to run the test files
  unless test_files.empty?
    last_ran_at = Time.now
    fork { test_files.each {|file| load file } }
    Process.wait
  end

  # reabsorb test execution overhead as necessary
  if Dir[overhead_file_glob].any? {|file| File.mtime(file) > started_at }
    exec 'ruby', __FILE__, *ARGV
  end

  sleep 1
end
